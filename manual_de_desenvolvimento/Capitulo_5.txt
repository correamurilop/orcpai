# üìò Cap√≠tulo 5 ‚Äì Tela de Or√ßamentos (`ui/tela_orcamentos.py`)

## üéØ Objetivo
Implementar a tela inicial do usu√°rio, onde ele poder√°:
- Listar todos os arquivos `.orcpai` da pasta `orcamentos/`
- Criar um novo or√ßamento
- Excluir um or√ßamento existente
- Exportar o or√ßamento selecionado (para Excel)
- Abrir o or√ßamento para visualizar os pain√©is

---

## üìÑ Estrutura da classe `TelaOrcamentos`
```python
import customtkinter as ctk
from core import file_manager
from core.models import Orcamento
import os
from datetime import datetime

class TelaOrcamentos(ctk.CTkFrame):
    def __init__(self, master):
        super().__init__(master)

        self.label = ctk.CTkLabel(self, text="Or√ßamentos dispon√≠veis", font=("Arial", 16))
        self.label.pack(pady=10)

        # Lista de arquivos
        self.lista_arquivos = ctk.CTkOptionMenu(self, values=self.carregar_lista())
        self.lista_arquivos.pack(pady=10)

        # Bot√µes padr√£o do menu lateral
        self.btn_adicionar = ctk.CTkButton(self, text="Adicionar Or√ßamento", command=self.adicionar_orcamento)
        self.btn_adicionar.pack(pady=5)

        self.btn_excluir = ctk.CTkButton(self, text="Excluir Or√ßamento", command=self.excluir_orcamento)
        self.btn_excluir.pack(pady=5)

        self.btn_abrir = ctk.CTkButton(self, text="Abrir Or√ßamento", command=self.abrir_orcamento)
        self.btn_abrir.pack(pady=5)

        self.btn_exportar = ctk.CTkButton(self, text="Exportar para Excel", command=self.exportar_excel)
        self.btn_exportar.pack(pady=5)

    def carregar_lista(self):
        arquivos = file_manager.listar_arquivos_orcamentos()
        return [os.path.basename(a) for a in arquivos]

    def adicionar_orcamento(self):
        nome = f"orcamento_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
        orcamento = Orcamento(nome=nome, data=datetime.now().strftime('%Y-%m-%d'))
        caminho = f"orcamentos/{nome}.orcpai"
        file_manager.salvar_orcamento(orcamento, caminho)
        self.lista_arquivos.configure(values=self.carregar_lista())

    def excluir_orcamento(self):
        selecionado = self.lista_arquivos.get()
        if selecionado:
            os.remove(f"orcamentos/{selecionado}")
            self.lista_arquivos.configure(values=self.carregar_lista())

    def abrir_orcamento(self):
        from ui.tela_paineis import TelaPaineis
        selecionado = self.lista_arquivos.get()
        if selecionado:
            caminho = f"orcamentos/{selecionado}"
            orcamento = file_manager.carregar_orcamento(caminho)

            for widget in self.master.winfo_children():
                widget.destroy()

            TelaPaineis(self.master, orcamento, caminho).pack(fill="both", expand=True)

    def exportar_excel(self):
        # Fun√ß√£o ser√° implementada no Cap√≠tulo 10
        pass
```

---

‚úÖ **Cap√≠tulo 5 conclu√≠do.**

Pr√≥ximo: Cap√≠tulo 6 ‚Äì Tela de Pain√©is (`tela_paineis.py`)